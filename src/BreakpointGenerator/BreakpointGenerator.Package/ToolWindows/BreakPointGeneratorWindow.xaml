<UserControl x:Class="Microsoft.ALMRangers.BreakpointGenerator.ToolWindows.BreakPointGeneratorWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:common="clr-namespace:Microsoft.ALMRangers.BreakpointGenerator.Common"
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}"
             mc:Ignorable="d"
             Name="MyToolWindow">
    <UserControl.Resources>
        <Style x:Key="TreeViewItemStyle"
               TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected"
                    Value="{Binding IsInitiallySelected, Mode=OneTime}" />
            <Setter Property="KeyboardNavigation.AcceptsReturn"
                    Value="True" />
            <Setter Property="common:VirtualToggleButton.IsVirtualToggleButton"
                    Value="True" />
            <Setter Property="common:VirtualToggleButton.IsChecked"
                    Value="{Binding IsChecked}" />
            <Setter Property="BorderBrush"
                    Value="Transparent"></Setter>
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarTextActiveKey}}"></Setter>
            
<!-- Style for the selected item -->
            <Setter Property="BorderThickness" Value="1"/>
            <Style.Triggers>
                <!-- Selected and has focus -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarTextActiveKey}}"/>
                </Trigger>
                <!-- Mouse over -->
                <Trigger Property="IsMouseDirectlyOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFFAFBFD" Offset="0"/>
                                <GradientStop Color="#FFEBF3FD" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabSelectedBackgroundKey}}"/>
                </Trigger>
                <!-- Selected but does not have the focus -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsSelectionActive" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabSelectedBackgroundKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
        </Style>
        <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate"
                                  ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal"
                        Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}">

                <!-- These elements are bound to a FooViewModel object. -->
                <CheckBox Focusable="False"
                          IsChecked="{Binding IsChecked}"
                          VerticalAlignment="Center"
                          Margin="2"
                          Command="{Binding OnInsertBreakpointCommand}"
                          CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}, Mode=OneWay}" />
                <Image Source="{Binding Icon}"
                       Margin="2" />
                <ContentPresenter Content="{Binding Node.DisplayName}"
                                  Margin="2,0">
                </ContentPresenter>

            </StackPanel>
        </HierarchicalDataTemplate>
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabSelectedBackgroundKey}}" />
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}" />
            <Setter Property="BorderThickness"
                    Value="0" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <ProgressBar Height="2"
                     Margin="0, 1,0,0"
                     IsIndeterminate="True"
                     Visibility="{Binding IsLoading}"
                     VerticalAlignment="Top">
        </ProgressBar>
        <!--<ToolBar Grid.Row="0">
                <Button Command="{Binding ExpandCommand}" Margin="3,0,0,0">
                    <Image Source="../Resources/Expand.png" ></Image>
                </Button>
            <Button Command="{Binding CollapseCommand}" Margin="3,0,0,0">
                <Image Source="../Resources/collapse.png"></Image>
            </Button>
            <Separator></Separator>
            <Button Command="{Binding SettingsCommand}" Margin="3,0,0,0">
                <Image Source="../Resources/options.png"></Image>
            </Button>
            </ToolBar>-->
        
        <TreeView x:Name="tree"
                  Margin="5"
                  Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
                  Foreground="Transparent"
                  BorderBrush="Transparent"
                  ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                  ItemsSource="{Binding Tree}"
                  ItemTemplate="{StaticResource CheckBoxItemTemplate}">
        </TreeView>

    </Grid>
</UserControl>
